{"version":3,"file":"modal_bf.min.js","sources":["../src/modal_bf.js"],"sourcesContent":["define(['jquery', 'core/notification', 'core/custom_interaction_events', 'core/modal', 'core/modal_registry'],\n        function($, Notification, CustomEvents, Modal, ModalRegistry) {\n\n    var registered = false;\n    var SELECTORS = {\n        SAMEWINDOW_BUTTON: '[data-action=\"samewindow\"]',\n        NEWWINDOW_BUTTON: '[data-action=\"newwindow\"]',\n        CANCEL_BUTTON: '[data-action=\"cancel\"]',\n    };\n\n    /**\n     * Constructor for the Modal.\n     *\n     * @param {object} root The root jQuery element for the modal\n     */\n    var ModalBf = function(root) {\n        Modal.call(this, root);\n\n        if (!this.getFooter().find(SELECTORS.SAMEWINDOW_BUTTON).length) {\n            Notification.exception({message: 'No same window button found'});\n        }\n\n        if (!this.getFooter().find(SELECTORS.NEWWINDOW_BUTTON).length) {\n            Notification.exception({message: 'No new window button found'});\n        }\n\n        if (!this.getFooter().find(SELECTORS.CANCEL_BUTTON).length) {\n            Notification.exception({message: 'No cancel button found'});\n        }\n    };\n\n    ModalBf.TYPE = 'greetings';\n    ModalBf.prototype = Object.create(Modal.prototype);\n    ModalBf.prototype.constructor = ModalBf;\n\n    /**\n     * Set up all of the event handling for the modal.\n     *\n     * @method registerEventListeners\n     */\n    ModalBf.prototype.registerEventListeners = function() {\n        // Apply parent event listeners.\n        Modal.prototype.registerEventListeners.call(this);\n\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.SAMEWINDOW_BUTTON, function() {\n            // loading animations, error handling etc.\n        }.bind(this));\n\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.NEWWINDOW_BUTTON, function() {\n        }.bind(this));\n\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.CANCEL_BUTTON, function() {\n            // Add your logic for when the cancel button is clicked.\n        }.bind(this));\n    };\n\n    // Automatically register with the modal registry the first time this module is imported so that you can create modals\n    // of this type using the modal factory.\n    if (!registered) {\n        ModalRegistry.register(ModalBf.TYPE, ModalBf, 'local_greetings/modal_bf');\n        registered = true;\n    }\n\n    return ModalBf;\n});"],"names":["define","$","Notification","CustomEvents","Modal","ModalRegistry","registered","SELECTORS","ModalBf","root","call","this","getFooter","find","length","exception","message","TYPE","prototype","Object","create","constructor","registerEventListeners","getModal","on","events","activate","bind","register"],"mappings":"AAAAA,kCAAO,CAAC,SAAU,oBAAqB,iCAAkC,aAAc,wBAC/E,SAASC,EAAGC,aAAcC,aAAcC,MAAOC,mBAE/CC,YAAa,EACbC,4BACmB,6BADnBA,2BAEkB,4BAFlBA,wBAGe,yBAQfC,QAAU,SAASC,MACnBL,MAAMM,KAAKC,KAAMF,MAEZE,KAAKC,YAAYC,KAAKN,6BAA6BO,QACpDZ,aAAaa,UAAU,CAACC,QAAS,gCAGhCL,KAAKC,YAAYC,KAAKN,4BAA4BO,QACnDZ,aAAaa,UAAU,CAACC,QAAS,+BAGhCL,KAAKC,YAAYC,KAAKN,yBAAyBO,QAChDZ,aAAaa,UAAU,CAACC,QAAS,mCAIzCR,QAAQS,KAAO,aACfT,QAAQU,UAAYC,OAAOC,OAAOhB,MAAMc,YACtBG,YAAcb,QAOhCA,QAAQU,UAAUI,uBAAyB,WAEvClB,MAAMc,UAAUI,uBAAuBZ,KAAKC,WAEvCY,WAAWC,GAAGrB,aAAasB,OAAOC,SAAUnB,4BAA6B,aAE5EoB,KAAKhB,YAEFY,WAAWC,GAAGrB,aAAasB,OAAOC,SAAUnB,2BAA4B,aAC3EoB,KAAKhB,YAEFY,WAAWC,GAAGrB,aAAasB,OAAOC,SAAUnB,wBAAyB,aAExEoB,KAAKhB,QAKNL,aACDD,cAAcuB,SAASpB,QAAQS,KAAMT,QAAS,4BAC9CF,YAAa,GAGVE"}